---

---

<section class="hero" id="home">
  <!-- Background Slider -->
  <div class="hero-slider">
    <div
      class="slide active"
      style="background-image: url('/galeria/equipo2.webp')"
    >
    </div>
    <div class="slide" style="background-image: url('/galeria/equipo.webp')">
    </div>
    <div class="slide" style="background-image: url('/galeria/musicos1.webp')">
    </div>
    <div
      class="slide"
      style="background-image: url('/galeria/clases de canto.webp')"
    >
    </div>
    <div class="slide" style="background-image: url('/galeria/equipo.webp')">
    </div>
  </div>

  <!-- Overlay -->
  <div class="hero-overlay"></div>

  <!-- Content -->
  <div class="hero-content">
    <div class="hero-text">
      <p class="hero-description animate-fade-in">
        Adorando a Dios con excelencia y pasión
      </p>
    </div>
    <div class="hero-buttons animate-fade-in">
      <a href="#about" class="btn btn-primary">
        <span>Conócenos</span>
        <svg
          class="btn-icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path d="M5 12h14M12 5l7 7-7 7"></path>
        </svg>
      </a>
      <a href="#events" class="btn btn-secondary">
        <span>Próximos Eventos</span>
        <svg
          class="btn-icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <circle cx="12" cy="12" r="10"></circle>
          <polyline points="12,6 12,12 16,14"></polyline>
        </svg>
      </a>
    </div>
  </div>

  <!-- Navigation Dots -->
  <div class="slider-dots">
    <button class="dot active" data-slide="0" aria-label="Slide 1"></button>
    <button class="dot" data-slide="1" aria-label="Slide 2"></button>
    <button class="dot" data-slide="2" aria-label="Slide 3"></button>
    <button class="dot" data-slide="3" aria-label="Slide 4"></button>
    <button class="dot" data-slide="4" aria-label="Slide 5"></button>
  </div>

  <!-- Progress Bar -->
  <div class="slider-progress">
    <div class="progress-bar"></div>
  </div>
</section>

<style>
  .hero {
    height: 100vh;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-align: center;
  }

  /* Background Slider */
  .hero-slider {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
    transform: scale(1.1);
    animation: zoomIn 8s ease-out forwards;
  }

  .slide.active {
    opacity: 1;
    transform: scale(1);
  }

  @keyframes zoomIn {
    0% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }

  /* Overlay */
  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(11, 29, 85, 0.8) 0%,
      rgba(60, 20, 71, 0.6) 50%,
      rgba(125, 76, 9, 0.542) 100%
    );
    z-index: 2;
  }

  /* Content */
  .hero-content {
    max-width: 1000px;
    position: relative;
    z-index: 3;
    padding: 0;
    background: transparent;
    backdrop-filter: none;
    border: none;
    box-shadow: none;
    animation: contentFloat 6s ease-in-out infinite;
  }

  @keyframes contentFloat {
    0%,
    100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .hero-text {
    margin-bottom: 4rem;
    text-align: center;
  }

  .hero-title {
    font-size: 5rem;
    margin-bottom: 1.5rem;
    font-weight: 900;
    background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 50%, #e9ecef 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
    letter-spacing: -0.03em;
    line-height: 1.1;
    position: relative;
  }

  .hero-title::before {
    content: "";
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 200px;
    height: 4px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    border-radius: 2px;
  }

  .hero-subtitle {
    font-size: 3rem;
    margin-bottom: 2.5rem;
    font-weight: 700;
    color: var(--primary-orange);
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
    position: relative;
    display: inline-block;
  }

  .hero-subtitle::before {
    content: "";
    position: absolute;
    top: 50%;
    left: -30px;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    background: var(--primary-orange);
    border-radius: 50%;
    opacity: 0.7;
  }

  .hero-subtitle::after {
    content: "";
    position: absolute;
    top: 50%;
    right: -30px;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    background: var(--primary-orange);
    border-radius: 50%;
    opacity: 0.7;
  }

  .hero-description {
    font-size: 1.6rem;
    margin-bottom: 3rem;
    line-height: 1.8;
    color: rgba(255, 255, 255, 0.95);
    text-shadow: 0 3px 6px rgba(0, 0, 0, 0.4);
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    font-weight: 300;
    letter-spacing: 0.5px;
  }

  /* Buttons */
  .hero-buttons {
    display: flex;
    gap: 2rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 2rem;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.8rem 1.8rem;
    border-radius: 40px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    z-index: 1;
    border: none;
    cursor: pointer;
    transform-style: preserve-3d;
  }

  .btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.6s;
    z-index: -1;
  }

  .btn:hover::before {
    left: 100%;
  }

  .btn-icon {
    width: 16px;
    height: 16px;
    transition: transform 0.3s ease;
  }

  .btn:hover .btn-icon {
    transform: translateX(3px);
  }

  .btn-primary {
    background: linear-gradient(
      135deg,
      var(--primary-orange) 0%,
      #ff6b35 50%,
      #ff8c42 100%
    );
    color: white;
    box-shadow:
      0 10px 30px rgba(234, 117, 38, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  .btn-primary:hover {
    transform: translateY(-4px) scale(1.05) rotateX(3deg);
    box-shadow:
      0 12px 25px rgba(234, 117, 38, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.2);
    background: linear-gradient(135deg, #ff6b35 0%, #ff8c42 50%, #ffa726 100%);
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.08);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(15px);
    box-shadow:
      0 8px 25px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.4);
    transform: translateY(-4px) scale(1.05) rotateX(-3deg);
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  /* Navigation Dots */
  .slider-dots {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 1rem;
    z-index: 4;
  }

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }

  .dot::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: var(--primary-orange);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .dot.active {
    border-color: var(--primary-orange);
    transform: scale(1.2);
  }

  .dot.active::before {
    opacity: 1;
  }

  .dot:hover {
    border-color: var(--primary-orange);
    transform: scale(1.1);
  }

  /* Progress Bar */
  .slider-progress {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    z-index: 4;
  }

  .progress-bar {
    height: 100%;
    background: linear-gradient(90deg, var(--primary-orange), #ff6b35);
    width: 0%;
    transition: width 0.1s linear;
    box-shadow: 0 0 10px rgba(234, 117, 38, 0.5);
  }

  /* Animations */
  .animate-fade-in {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease forwards;
  }

  .hero-title.animate-fade-in {
    animation-delay: 0.3s;
  }
  .hero-subtitle.animate-fade-in {
    animation-delay: 0.5s;
  }
  .hero-description.animate-fade-in {
    animation-delay: 0.7s;
  }
  .hero-buttons.animate-fade-in {
    animation-delay: 0.9s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-content {
      width: 95%;
      padding: 0;
      margin: 0 1rem;
    }

    .hero-title {
      font-size: 3rem;
    }

    .hero-title::before {
      width: 150px;
    }

    .hero-subtitle {
      font-size: 2.2rem;
    }

    .hero-subtitle::before,
    .hero-subtitle::after {
      width: 15px;
      height: 15px;
      left: -20px;
      right: -20px;
    }

    .hero-description {
      font-size: 1.2rem;
    }

    .hero-buttons {
      flex-direction: column;
      gap: 1.2rem;
    }

    .btn {
      display: inline-block; /* Para que se ajuste al contenido */
      padding: 0.7rem 1.5rem; /* Espacio alrededor del texto */
      font-size: 0.95rem;
      text-align: center; /* Centrar el texto dentro */
      margin: 0 auto; /* Centrar el botón en el contenedor */
    }

    .slider-dots {
      bottom: 1.5rem;
      gap: 0.8rem;
    }

    .dot {
      width: 10px;
      height: 10px;
    }
  }

  @media (max-width: 480px) {
    .hero-content {
      padding: 0;
    }

    .hero-title {
      font-size: 2.5rem;
    }

    .hero-title::before {
      width: 120px;
    }

    .hero-subtitle {
      font-size: 1.8rem;
    }

    .hero-subtitle::before,
    .hero-subtitle::after {
      width: 12px;
      height: 12px;
      left: -15px;
      right: -15px;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .btn {
      padding: 0.6rem 1.2rem;
      font-size: 0.9rem;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .slide,
    .hero-content,
    .animate-fade-in {
      animation: none;
      transition: none;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const slides = document.querySelectorAll(".slide");
    const dots = document.querySelectorAll(".dot");
    const progressBar = document.querySelector(".progress-bar") as HTMLElement;
    const hero = document.querySelector(".hero") as HTMLElement;

    if (!progressBar || !hero) {
      console.warn("Hero slider elements not found");
      return;
    }

    let currentSlide = 0;
    let slideInterval: NodeJS.Timeout | undefined;
    let progressInterval: NodeJS.Timeout | undefined;
    const slideDuration = 5000; // 5 seconds per slide

    // Function to show a specific slide
    function showSlide(index: number) {
      // Remove active class from all slides and dots
      slides.forEach((slide) => slide.classList.remove("active"));
      dots.forEach((dot) => dot.classList.remove("active"));

      // Add active class to current slide and dot
      slides[index].classList.add("active");
      dots[index].classList.add("active");

      currentSlide = index;
    }

    // Function to go to next slide
    function nextSlide() {
      const nextIndex = (currentSlide + 1) % slides.length;
      showSlide(nextIndex);
    }

    // Function to start the automatic slideshow
    function startSlideshow() {
      slideInterval = setInterval(nextSlide, slideDuration);
      startProgressBar();
    }

    // Function to stop the automatic slideshow
    function stopSlideshow() {
      if (slideInterval) clearInterval(slideInterval);
      if (progressInterval) clearInterval(progressInterval);
    }

    // Function to start progress bar animation
    function startProgressBar() {
      progressBar.style.width = "0%";
      let progress = 0;
      const progressStep = 100 / (slideDuration / 50); // Update every 50ms

      progressInterval = setInterval(() => {
        progress += progressStep;
        progressBar.style.width = progress + "%";

        if (progress >= 100) {
          if (progressInterval) clearInterval(progressInterval);
        }
      }, 50);
    }

    // Add click event listeners to dots
    dots.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        stopSlideshow();
        showSlide(index);
        startSlideshow();
      });
    });

    // Pause slideshow on hover
    hero.addEventListener("mouseenter", stopSlideshow);
    hero.addEventListener("mouseleave", startSlideshow);

    // Touch/swipe support for mobile
    let touchStartX = 0;
    let touchEndX = 0;

    hero.addEventListener("touchstart", (e: TouchEvent) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    hero.addEventListener("touchend", (e: TouchEvent) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });

    function handleSwipe() {
      const swipeThreshold = 50;
      const diff = touchStartX - touchEndX;

      if (Math.abs(diff) > swipeThreshold) {
        stopSlideshow();

        if (diff > 0) {
          // Swipe left - next slide
          nextSlide();
        } else {
          // Swipe right - previous slide
          const prevIndex =
            currentSlide === 0 ? slides.length - 1 : currentSlide - 1;
          showSlide(prevIndex);
        }

        startSlideshow();
      }
    }

    // Keyboard navigation
    document.addEventListener("keydown", (e) => {
      if (e.key === "ArrowLeft") {
        stopSlideshow();
        const prevIndex =
          currentSlide === 0 ? slides.length - 1 : currentSlide - 1;
        showSlide(prevIndex);
        startSlideshow();
      } else if (e.key === "ArrowRight") {
        stopSlideshow();
        nextSlide();
        startSlideshow();
      }
    });

    // Initialize the slideshow
    showSlide(0);
    startSlideshow();

    // Pause slideshow when page is not visible
    document.addEventListener("visibilitychange", () => {
      if (document.hidden) {
        stopSlideshow();
      } else {
        startSlideshow();
      }
    });
  });
</script>
